# Imports
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load datasets
dlls = pd.read_csv('DLLs_Imported.csv')
api_functions = pd.read_csv('API_Functions.csv')
pe_header = pd.read_csv('PE_Header.csv')
pe_section = pd.read_csv('PE_Section.csv')

# Merge datasets on SHA256 with custom suffixes to handle overlapping columns
merged = dlls.merge(api_functions, on='SHA256', suffixes=('_dll', '_api'))
merged = merged.merge(pe_header, on='SHA256', suffixes=('', '_header'))
merged = merged.merge(pe_section, on='SHA256', suffixes=('', '_section'))

# Assuming after merging the 'Type' column is our label
y = merged['Type']
X = merged.drop(columns=['SHA256', 'Type'])

# Split dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Use RandomForest Classifier
clf = RandomForestClassifier(n_estimators=100)
clf.fit(X_train, y_train)

# Predict on test set
y_pred = clf.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy * 100:.2f}%")
print(classification_report(y_test, y_pred))